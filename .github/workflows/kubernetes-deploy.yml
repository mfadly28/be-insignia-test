name: CI/CD - test build push deploy

on:
  push:
    branches: [ "main" ]

env:
  IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/express-jwt-app:latest

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Wait for Postgres
        run: |
          for i in {1..20}; do
            pg_isready -h localhost -p 5432 && break
            echo "waiting for postgres..."
            sleep 1
          done

      - name: Configure env for tests
        run: |
          echo "DB_HOST=localhost" > .env
          echo "JWT_SECRET=testsecret" >> .env
          echo "JWT_EXPIRES_IN=1h" >> .env
          echo "DB_PORT=5432" >> .env
          echo "DB_USER=postgres" >> .env
          echo "DB_PASSWORD=postgres" >> .env
          echo "DB_NAME=test_db" >> .env
          echo "PORT=3000" >> .env

      - name: Run tests
        run: npm test

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE }}

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.27.0'

      # - name: Configure kubeconfig
      #   run: |
      #     mkdir -p $HOME/.kube
      #     echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 --decode > $HOME/.kube/config
      #     chmod 600 $HOME/.kube/config

      # - name: Create imagePullSecret
      #   env:
      #     DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      #     DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      #   run: |
      #     kubectl create secret docker-registry regcred \
      #       --docker-server=https://index.docker.io/v1/ \
      #       --docker-username="${DOCKERHUB_USERNAME}" \
      #       --docker-password="${DOCKERHUB_TOKEN}" \
      #       --dry-run=client -o yaml | kubectl apply -f -

      # - name: Apply k8s manifests
      #   run: |
      #     kubectl apply -f deployment/service.yaml || true
      #     kubectl apply -f deployment/deployment.yaml
      #     kubectl set image deployment/express-deployment express-container=${{ env.IMAGE }} --record
      #     kubectl rollout status deployment/express-deployment --timeout=120s
